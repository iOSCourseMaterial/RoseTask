/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2013 Google Inc.
 */

//
//  GTLQueryRosetask.m
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   rosetask/v1
// Description:
//   Rose Task API
// Classes:
//   GTLQueryRosetask (10 custom class methods, 7 custom properties)

#import "GTLQueryRosetask.h"

#import "GTLRosetaskApiMessagesTaskListListResponse.h"
#import "GTLRosetaskApiMessagesTaskUserResponseMessage.h"
#import "GTLRosetaskTask.h"
#import "GTLRosetaskTaskCollection.h"
#import "GTLRosetaskTaskList.h"
#import "GTLRosetaskTaskListProtoIdTitleTaskUserEmails.h"
#import "GTLRosetaskTaskProtoIdTextTaskListIdDetailsCompleteAssignedToEmail.h"
#import "GTLRosetaskTaskUser.h"
#import "GTLRosetaskTaskUserProtoLowercaseEmailPreferredNameGooglePlusId.h"

@implementation GTLQueryRosetask

@dynamic fields, identifier, limit, lowercaseEmail, order, pageToken,
         taskListId;

+ (NSDictionary *)parameterNameMap {
  NSDictionary *map =
    [NSDictionary dictionaryWithObjectsAndKeys:
      @"id", @"identifier",
      @"lowercase_email", @"lowercaseEmail",
      @"task_list_id", @"taskListId",
      nil];
  return map;
}

#pragma mark -
#pragma mark "task" methods
// These create a GTLQueryRosetask object.

+ (id)queryForTaskDeleteWithIdentifier:(long long)identifier {
  NSString *methodName = @"rosetask.task.delete";
  GTLQueryRosetask *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLRosetaskTask class];
  return query;
}

+ (id)queryForTaskGetWithIdentifier:(long long)identifier {
  NSString *methodName = @"rosetask.task.get";
  GTLQueryRosetask *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLRosetaskTask class];
  return query;
}

+ (id)queryForTaskGettasksWithTaskListId:(long long)taskListId {
  NSString *methodName = @"rosetask.task.gettasks";
  GTLQueryRosetask *query = [self queryWithMethodName:methodName];
  query.taskListId = taskListId;
  query.expectedObjectClass = [GTLRosetaskTaskCollection class];
  return query;
}

+ (id)queryForTaskInsertWithObject:(GTLRosetaskTaskProtoIdTextTaskListIdDetailsCompleteAssignedToEmail *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"rosetask.task.insert";
  GTLQueryRosetask *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRosetaskTask class];
  return query;
}

#pragma mark -
#pragma mark "tasklist" methods
// These create a GTLQueryRosetask object.

+ (id)queryForTasklistDeleteWithIdentifier:(long long)identifier {
  NSString *methodName = @"rosetask.tasklist.delete";
  GTLQueryRosetask *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLRosetaskTaskList class];
  return query;
}

+ (id)queryForTasklistGetWithIdentifier:(long long)identifier {
  NSString *methodName = @"rosetask.tasklist.get";
  GTLQueryRosetask *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLRosetaskTaskList class];
  return query;
}

+ (id)queryForTasklistGettasklists {
  NSString *methodName = @"rosetask.tasklist.gettasklists";
  GTLQueryRosetask *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLRosetaskApiMessagesTaskListListResponse class];
  return query;
}

+ (id)queryForTasklistInsertWithObject:(GTLRosetaskTaskListProtoIdTitleTaskUserEmails *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"rosetask.tasklist.insert";
  GTLQueryRosetask *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRosetaskTaskList class];
  return query;
}

#pragma mark -
#pragma mark "taskuser" methods
// These create a GTLQueryRosetask object.

+ (id)queryForTaskuserGet {
  NSString *methodName = @"rosetask.taskuser.get";
  GTLQueryRosetask *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLRosetaskApiMessagesTaskUserResponseMessage class];
  return query;
}

+ (id)queryForTaskuserInsertWithObject:(GTLRosetaskTaskUserProtoLowercaseEmailPreferredNameGooglePlusId *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"rosetask.taskuser.insert";
  GTLQueryRosetask *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRosetaskTaskUser class];
  return query;
}

@end
